# Copyright the Hyperledger Fabric contributors. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0

name: Release
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Fabric CA Release'
        required: true
        type: string
      two_digit_release:
        description: 'Fabric CA Two Digit Release'
        required: true
        type: string

env:
  GO_VER: 1.18.7

permissions:
  contents: read

jobs:
  build-binaries:
    name: Build Fabric CA Binaries
    strategy:
      matrix:
        include:
        - image: ubuntu-22.04
          target: linux
        - image: macos-11
          target: darwin
        - image: windows-2022
          target: windows
    runs-on: ${{ matrix.image }}
    steps:
      - uses: actions/setup-go@v3
        name: Install Go
        with:
          go-version: ${{ env.GO_VER }}
      - uses: actions/checkout@v3
        name: Checkout Fabric CA Code
      - run: make dist
        name: Compile Binary and Create Tarball
      - uses: actions/upload-artifact@v3
        name: Publish Release Artifact
        with:
          name: hyperledger-fabric-ca-${{ matrix.target }}-amd64-${{ inputs.release }}.tar.gz
          path: release/${{ matrix.target }}-amd64/hyperledger-fabric-ca-${{ matrix.target }}-amd64-${{ inputs.release }}.tar.gz
  build-and-push-docker-images:
    name: Build and Push Fabric CA Docker Images
    runs-on: ubuntu-22.04
    steps:
      - run: sudo apt clean
        name: Run APT Clean
      - run: sudo apt update
        name: Run Apt Update
      - run: sudo apt install -y gcc haveged libtool make
        name: Install Dependencies
      - uses: actions/setup-go@v3
        name: Install Go
        with:
          go-version: ${{ env.GO_VER }}
      - uses: actions/checkout@v3
        name: Checkout Fabric CA Code
      - run: ./ci/scripts/publish_docker.sh
        env:
          RELEASE: ${{ inputs.release }}
          TWO_DIGIT_RELEASE: ${{ inputs.two_digit_release }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        name: Publish Docker Images
  create-release:
    name: Create GitHub Release
    needs: [ build-binaries, build-and-push-docker-images ]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout Fabric CA Code
        uses: actions/checkout@v3
      - name: Download Artifacts
        id: download
        uses: actions/download-artifact@v3
      - name: Release Fabric CA Version
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.tar.gz/*.tar.gz"
          bodyFile: release_notes/v${{ inputs.release }}.md
          tag: v${{ inputs.release }}
          token: ${{ secrets.GITHUB_TOKEN }}