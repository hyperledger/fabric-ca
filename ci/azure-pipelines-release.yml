# Copyright the Hyperledger Fabric contributors. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0

name: RELEASE-$(Date:yyyyMMdd)$(Rev:.rrr)
trigger:
  tags:
    include:
      - v*
pr: none

variables:
  - group: GitHubPackageRegistry
  - name: GOPATH
    value: $(Agent.BuildDirectory)/go
  - name: GOVER
    value: 1.13.4
  - name: RELEASE
    value: 2.0.0

stages:
  - stage: BuildBinaries
    dependsOn: []
    displayName: "Build Fabric CA Binaries"
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-16.04
        container: golang:$(GOVER)
        strategy:
          matrix:
            Linux-amd64:
              TARGET: linux-amd64
            MacOS-amd64:
              TARGET: darwin-amd64
            Windows-amd64:
              TARGET: windows-amd64
        steps:
          - checkout: self
            path: 'go/src/github.com/hyperledger/fabric-ca'
            displayName: Checkout Fabric CA Code
          - script: make release/$(TARGET)
            displayName: Compile Fabric CA Client
          - script: cd release/$(TARGET) && tar -czvf $(TARGET)-$(RELEASE).tar.gz bin/
            displayName: Create Tarball
          - publish: release/$(TARGET)/$(TARGET)-$(RELEASE).tar.gz
            artifact: $(TARGET).tar.gz
            displayName: Publish Release Artifact

  - stage: BuildAndPushDockerImages
    dependsOn: []
    displayName: "Build and Push Fabric CA Docker Images"
    jobs:
      - job: Docker
        pool:
          vmImage: ubuntu-16.04
        steps:
          - template: install_deps.yml
          - checkout: self
            path: 'go/src/github.com/hyperledger/fabric-ca'
            displayName: Checkout Fabric CA Code
          - script: docker login --username $(GITHUB_REGISTRY_USERNAME) --password $(GITHUB_REGISTRY_PASSWORD)
            displayName: Login to Github Package Registry
          - script: |
              make docker
              docker tag hyperledger/fabric-ca btl5037/fabric-ca:amd64-$(RELEASE)
              docker tag hyperledger/fabric-ca btl5037/fabric-ca:latest
            displayName: Build and Tag Fabric CA Docker Image
          - script: |
              docker push btl5037/fabric-ca:amd64-$(RELEASE)
              docker push btl5037/fabric-ca:latest
            displayName: Push Docker Images
          - script: docker logout
            displayName: Logout of Github Package Registry

  - stage: DraftRelease
    displayName: "Draft GitHub Release"
    dependsOn:
      - BuildBinaries
      - BuildAndPushDockerImages
    jobs:
      - job: Release
        pool:
          vmImage: ubuntu-16.04
        steps:
          - download: current
            artifact: linux-amd64
            displayName: Download Linux Tarball
          - download: current
            artifact: darwin-amd64
            displayName: Download MacOS Tarball
          - download: current
            artifact: windows-amd64
            displayName: Download Windows Tarball
          - checkout: self
          - task: GitHubRelease@0
            inputs:
              actions: create
              addChangeLog: true
              assets: $(Pipeline.Workspace)/*amd64/*
              compareWith: lastFullRelease
              gitHubConnection: fabric-ca-release
              isDraft: true
              releaseNotesFile: release_notes/v1.4.4.txt
              repositoryName: $(Build.Repository.Name)
              releaseNotesSource: file
              tag: v$(RELEASE)
              tagSource: manual
              title: v$(RELEASE)
            displayName: Release Fabric CA