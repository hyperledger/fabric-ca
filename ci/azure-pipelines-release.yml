# Copyright the Hyperledger Fabric cont ributors. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0

name: RELEASE-$(Date:yyyyMMdd)$(Rev:.rrr)
trigger: none
pr: none

variables:
  - group: credentials
  - name: GOPATH
    value: $(Agent.BuildDirectory)/go
  - name: GOVER
    value: 1.18.2

stages:
  - stage: BuildBinaries
    dependsOn: []
    displayName: "Build Fabric CA Binaries"
    jobs:
      - job: Build
        strategy:
          matrix:
            Linux:
              IMAGE: ubuntu-latest
              TARGET: linux
            Mac:
              IMAGE: macOS-latest
              TARGET: darwin
            Windows:
              IMAGE: windows-latest
              TARGET: windows
        pool:
          vmImage: $(IMAGE)
        steps:
          - task: GoTool@0
            inputs:
              version: $(GOVER)
          - checkout: self
            path: 'go/src/github.com/hyperledger/fabric-ca'
            displayName: Checkout Fabric CA Code
          - script: make dist
            displayName: Compile Binary and Create Tarball
          - publish: release/$(TARGET)-amd64/hyperledger-fabric-ca-$(TARGET)-amd64-$(RELEASE).tar.gz
            artifact: hyperledger-fabric-ca-$(TARGET)-amd64-$(RELEASE).tar.gz
            displayName: Publish Release Artifact

  - stage: BuildAndPushDockerImages
    dependsOn: []
    displayName: "Build and Push Fabric CA Docker Images"
    jobs:
      - job: Docker
        pool:
          vmImage: ubuntu-latest
        steps:
          - template: install_deps.yml
          - checkout: self
            path: 'go/src/github.com/hyperledger/fabric-ca'
            displayName: Checkout Fabric CA Code
          - script: ./ci/scripts/publish_docker.sh
            env:
              DOCKER_PASSWORD: $(DockerHub-Password)
              DOCKER_USERNAME: $(DockerHub-Username)
            displayName: Publish Docker Images

  - stage: DraftRelease
    displayName: "Draft GitHub Release"
    dependsOn:
      - BuildBinaries
      - BuildAndPushDockerImages
    jobs:
      - job: Release
        pool:
          vmImage: ubuntu-latest
        steps:
          - download: current
            patterns: '*.tar.gz'
            displayName: Download Artifacts
          - checkout: self
          - task: GitHubRelease@0
            inputs:
              action: create
              addChangeLog: true
              assets: $(Pipeline.Workspace)/*amd64*/*
              compareWith: lastFullRelease
              gitHubConnection: hyperledger
              isDraft: true
              releaseNotesFile: release_notes/v$(RELEASE).md
              repositoryName: $(Build.Repository.Name)
              releaseNotesSource: file
              tag: v$(RELEASE)
              tagSource: manual
              title: v$(RELEASE)
            displayName: Draft Release of Fabric CA
